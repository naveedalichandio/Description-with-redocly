post:
  tags:
    - TournamentPlayer
  summary: Tournament - Player - Delete
  description: >-
    ### Tournament - Player - Delete


    This endpoint is used to delete a player from a tournament. Here is a
    detailed description of each component of the request:


    #### Request Details:

    - **Method**: 
      - `POST`: This indicates that the request is sending data to the server to perform an operation.

    - **URL**: 
      - `http://localhost:3000/api/tournament/player/delete`: This is the endpoint where the request is sent to delete a player from a tournament.

    #### Authentication:

    - **Auth Type**: 
      - `Bearer`: This indicates that the request requires a bearer token for authentication, which is typically used to verify the identity of the user making the request.

    - **Bearer Token Details**:
      - **Key**: `token`
      - **Value**: `sessionId`: This is the actual token that is used for authenticating the request. It represents the user's session identifier.

    #### Headers:

    - **Headers**: 
      - Currently, there are no additional headers specified. The header entry is disabled, indicating it is not being used in this request.

    #### Body:

    - **Body Mode**: 
      - `raw`: This indicates that the body of the request will be sent as a raw JSON string.

    - **Body Content**: 
      - The body contains a JSON object with the following fields:
        - **sessionId**: This represents the user's session identifier, which is needed for authentication and to authorize the operation.
        - **accountId**: This is the identifier for the user's account that is associated with the tournament.
        - **playerId**: This is the identifier for the player that is being deleted from the tournament.

    This request should be sent to remove a specific player, identified by the
    playerId, from the specified tournament while ensuring that the operation is
    authorized through the provided sessionId and accountId.
  requestBody:
    content:
      '*/*':
        schema:
          type: string
          example: >-
            "{\"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"playerId\":\"playerId\"}"
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
