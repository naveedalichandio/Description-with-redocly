post:
  tags:
    - NotificationLoyalty
  summary: Notification - Loyalty - Create
  description: >-
    This endpoint is called "Notification - Loyalty - Create". It is used to
    create a new loyalty notification. The request is set up to be sent as a
    POST method to the URL
    "http://localhost:3000/api/notification/loyalty/create".


    The request requires Bearer Authentication, which is specified in the auth
    property. The user must replace the placeholder "BearerToken" with a valid
    authentication token.


    The body of the request contains various properties, which are sent in raw
    JSON format:


    - "sessionId": A string representing the unique identifier of the current
    session.

    - "accountId": A string representing the unique identifier of the account.

    - "name": The name of the loyalty. 

    - "description": A brief description of the loyalty. 

    - "tags": Tags associated with the loyalty.

    - "profilePhotoUrl": The URL of the profile photo.

    - "coverPhotoUrl": The URL of the cover photo.

    - "minimumTipAmount": The minimum tip amount.

    - "categoryId": A string representing the unique identifier for the
    category.

    - "category": The name of the category.

    - "subCategoryId": A string representing the unique identifier for the
    subcategory.

    - "subCategory": The name of the subcategory.

    - "isLoyaltyPrivate": A boolean indicating whether the loyalty is private.

    - "isTournamentOnly": A boolean indicating whether the loyalty is only for
    tournaments.

    - "isLoyaltyDefault": A boolean indicating if the loyalty is the default.

    - "isPreLiveNotificationAds": A boolean indicating whether pre-live
    notification ads are enabled.

    - "isPostLiveNotificationAds": A boolean indicating whether post-live
    notification ads are enabled.

    - "breakPreLiveNotificationUrl": The URL of the video for pre-live
    notification break.

    - "breakPostLiveNotificationUrl": The URL of the video for post-live
    notification break.


    All these fields are required and must be filled with appropriate data
    format before sending the request.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            sessionId: sessionId
            accountId: accountId
            name: My Second Loyalty
            description: This loyalty is my second loyalty
            tags: second,loyalty
            profilePhotoUrl: https://example.com/profile.jpg
            coverPhotoUrl: https://example.com/cover.jpg
            minimumTipAmount: 10
            categoryId: category123
            category: General
            subCategoryId: subCategory456
            subCategory: Specific
            isLoyaltyPrivate: true
            isTournamentOnly: false
            isLoyaltyDefault: true
            isPreLiveNotificationAds: true
            isPostLiveNotificationAds: true
            breakPreLiveNotificationUrl: https://example.com/break-pre-live.mp4
            breakPostLiveNotificationUrl: https://example.com/break-post-live.mp4
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
