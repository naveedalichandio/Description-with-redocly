post:
  tags:
    - ConnectMessage
  summary: Connect - Message - Search
  description: >-
    The endpoint named "Connect - Message - Search" is designed to search for
    messages using various filtering criteria. It is a POST method API that
    sends requests to the URL
    "http://localhost:3000/api/connect/message/search". 


    In the request, the user will need to be authenticated with the backend
    server via the 'bearer' auth type. A token must be provided with the key as
    "token" and its respective value as "BearerToken". This token is a string
    type of data which is usually generated by the server upon successful login
    and sent to the client.


    In the headers section, no specific values are required and the default is
    shown as being disabled.


    Within the "body" section, a "raw" mode with JSON language set is used This
    raw body content should be a JSON string containing several items. 


    - The "sessionId" key requires the corresponding ID of the session.

    - The "accountId" key requires the given account's ID. 

    - The "provider" key requires the name of the social media provider like
    'facebook' for this example. 

    - The "findUsername" key is used to specify the username that you're trying
    to find messages for, like 'ahsan' as shown in the example. 

    - The "isEnabled" key is a boolean field which, when set to true, indicates
    that this search operation is currently enabled.


    Remember that each key-value pair in the raw body content needs to be
    wrapped in double quotes ("") to adhere to the JSON format. It will help
    avoiding errors while parsing the data on the server side.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            sessionId: sessionId
            accountId: accountId
            provider: facebook
            findUsername: ahsan
            isEnabled: true
  security:
    - bearerAuth: []
  responses:
    undefined:
      content:
        text/plain:
          schema:
            type: string
          examples:
            example-0:
              summary: slack
              value: null
            example-1:
              summary: facebook page
              value: null
            example-2:
              summary: facebook profile
              value: null
            example-3:
              summary: google chat
              value: null
            example-4:
              summary: linkedIn
              value: null
            example-5:
              summary: snapchat
              value: null
            example-6:
              summary: telegram
              value: null
            example-7:
              summary: x
              value: null
            example-8:
              summary: Youtube
              value: null
            example-9:
              summary: tiktok
              value: null
