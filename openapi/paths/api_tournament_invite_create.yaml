post:
  tags:
    - TournamentInvite
  summary: Tournament - Invite - Create
  description: >-
    ### Endpoint: Tournament - Invite - Create


    #### Authentication

    - **Auth Type**: Bearer Token
      - **Token**: A string that represents the authentication token required to access this endpoint. The token should be prefixed with "Bearer".

    #### Request Method

    - **Method**: POST
      - This indicates that the request is used to create a new tournament invite.

    #### Request URL

    - **URL**: `http://localhost:3000/api/tournament/invite/create`
      - This is the endpoint where the POST request will be sent to create a tournament invite.

    #### Request Headers

    - **Headers**: Currently includes an empty header which is disabled,
    indicating that no additional headers are needed for this request.


    #### Request Body

    - **Body Mode**: Raw
      - The body of the request contains a JSON object with various parameters required to create a tournament invite.

    ##### Body Parameters:

    - **sessionId**: `sessionId`
      - A unique identifier for the session associated with the tournament invite.
      
    - **accountId**: `accountId`
      - The unique identifier for the account that is sending the invite.

    - **name**: `"My Second Invite"`
      - The name of the tournament invite being created.

    - **description**: `"This invite is my second invite"`
      - A brief description of the invite providing additional context.

    - **tags**: `"second,invite"`
      - Tags associated with the invite which can help in categorization or searchability.

    - **profilePhotoUrl**: `"https://example.com/profile.jpg"`
      - URL to the profile photo that will be associated with the invite.

    - **coverPhotoUrl**: `"https://example.com/cover.jpg"`
      - URL to the cover photo that will be displayed with the invite.

    - **minimumTipAmount**: `10`
      - The minimum tip amount that can be offered with this invite.

    - **categoryId**: `"category123"`
      - A unique identifier for the category this invite falls under.

    - **category**: `"General"`
      - The name of the category assigned to this invite.

    - **subCategoryId**: `"subCategory456"`
      - A unique identifier for the sub-category this invite falls under.

    - **subCategory**: `"Specific"`
      - The name of the sub-category assigned to this invite.

    - **isInvitePrivate**: `true`
      - A boolean indicating whether the invite is private. If true, it can only be seen by invited participants.

    - **isTournamentOnly**: `false`
      - A boolean indicating whether the invite is only for tournament participants. If true, non-participant viewers cannot access it.

    - **isInviteDefault**: `true`
      - A boolean indicating whether this is the default invite configuration. 

    - **isPreLiveTournamentAds**: `true`
      - A boolean that determines if advertising is enabled before the tournament goes live.

    - **isPostLiveTournamentAds**: `true`
      - A boolean indicating if advertising is enabled after the tournament is finished.

    - **breakPreLiveVideoUrl**: `"https://example.com/break-pre-live.mp4"`
      - URL to a video that will be shown during breaks before the tournament goes live.

    - **breakPostLiveVideoUrl**: `"https://example.com/break-post-live.mp4"`
      - URL to a video that will be displayed during breaks after the tournament has ended.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            sessionId: sessionId
            accountId: accountId
            name: My Second Invite
            description: This invite is my second invite
            tags: second,invite
            profilePhotoUrl: https://example.com/profile.jpg
            coverPhotoUrl: https://example.com/cover.jpg
            minimumTipAmount: 10
            categoryId: category123
            category: General
            subCategoryId: subCategory456
            subCategory: Specific
            isInvitePrivate: true
            isTournamentOnly: false
            isInviteDefault: true
            isPreLiveTournamentAds: true
            isPostLiveTournamentAds: true
            breakPreLiveVideoUrl: https://example.com/break-pre-live.mp4
            breakPostLiveVideoUrl: https://example.com/break-post-live.mp4
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
