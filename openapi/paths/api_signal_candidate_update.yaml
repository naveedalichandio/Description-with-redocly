put:
  tags:
    - WhipSignal
  summary: Signal - Candidate - Update
  description: |-
    {
      "description": {
        "name": "Signal - Candidate - Update",
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "BearerToken",
                "type": "string"
              }
            ]
          },
          "details": {
            "method": "PUT": "This specifies the HTTP method used for the request, which is PUT, indicating that the request is intended to update existing data.",
            "url": "http://localhost:3000/api/signal/candidate/update": "This is the endpoint where the update request will be sent. It is hosted on a local server and specifies the resource to be updated, which is the signal candidate.",
            "headers": [
              {
                "key": "": "This indicates there are no specific headers being passed in the request.",
                "value": "": "There is no value associated with any headers.",
                "type": "default": "This signifies that the header is of default type.",
                "disabled": true: "This indicates that the header is disabled and not being sent with the request."
              }
            ],
            "body": {
              "mode": "raw": "This indicates that the body of the request is being sent in raw format rather than as form data or URL-encoded.",
              "raw": "{\"accountId\":\"accountId\", \"sessionId\":\"sessionId\", \"signalId\":\"signalId\", \"type\": \"candidate\",\"candidate\": \"candidate:842163049 1 udp 1677729535 192.168.1.1 54400 typ srflx raddr 0.0.0.0 rport 0 generation 0 ufrag EEtu network-id 1 network-cost 10\"}": "This is the actual data being sent in the body of the request. It is a JSON string that includes the following fields: \n- accountId: Represents the identifier for the account associated with the signal.\n- sessionId: Indicates the session related to the candidate update.\n- signalId: Identifies the specific signal that is being updated.\n- type: This is set to 'candidate', indicating the type of information being sent.\n- candidate: Contains the data for the candidate which includes various networking parameters such as candidate name, priority, and other attributes necessary for the signaling process.",
              "options": {
                "raw": {
                  "language": "json": "This indicates that the raw body content is formatted in JSON, ensuring that the server interprets it correctly."
                }
              }
            }
          }
        }
      }
    }
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            accountId: accountId
            sessionId: sessionId
            signalId: signalId
            type: candidate
            candidate: >-
              candidate:842163049 1 udp 1677729535 192.168.1.1 54400 typ srflx
              raddr 0.0.0.0 rport 0 generation 0 ufrag EEtu network-id 1
              network-cost 10
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
