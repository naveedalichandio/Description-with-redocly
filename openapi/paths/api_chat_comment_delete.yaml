post:
  tags:
    - ChatComment
  summary: Chat - Comment - Delete
  description: >-
    This endpoint is known as "Chat - Comment - Delete". It's used to delete a
    specific comment from a chat. There are several parameters to understand in
    this endpoint:


    1. "name" - A unique identifier for the endpoint. This endpoint's name is
    "Chat - Comment - Delete", referring to the task it is specifically designed
    to perform.


    2. "auth" - This section specifies the authentication method required to
    access this endpoint. In this case, it uses bearer authentication ("type":
    "bearer"), meaning you need to provide a token (Bearer token) in the request
    header to authenticate yourself.


    3. "request" - This is the actual command sent when the API is called. 


    4. "method" - This refers to the type of HTTP request method used. In this
    case, it's a POST method, which is typically used when you want to send data
    to be processed to a specified resource.


    5. "url" - The URL is the specific address where the request will be sent.
    For this endpoint, the request will be sent to
    "http://localhost:3000/api/chat/comment/delete".


    6. "headers" - Headers let the client and the server pass additional
    information with an HTTP request or response. This endpoint does not require
    any additional headers.


    7. "body" - This is the part of the request where you specify the data you
    want to send. In this endpoint, a raw JSON object is sent in the body,
    containing following fields:
        - "commentId": The ID of the comment to be deleted.
        - "threadId": The ID of the thread where the comment resides.
        - "accountId": The account ID related to the session making the request.
        - "sessionId": It is the unique id of the session attempting to delete the comment.

    8. "options" - This section provides additional details about how the body
    of the request is formatted. It specifies that the body is raw data and the
    language used is JSON.


    Please ensure you replace "BearerToken", "commentId", "threadId",
    "accountId" and "sessionId" with actual values in your request.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            commentId: commentId
            threadId: threadId
            accountId: accountId
            sessionId: sessionId
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
