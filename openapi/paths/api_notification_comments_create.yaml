post:
  tags:
    - NotificationComments
  summary: Notification - Comments - Create
  description: >-
    This endpoint is named "Notification - Comments - Create". It is used to
    create comments on notifications.


    - The `"auth"` field requires bearer token authentication. The bearer token
    should be provided in the `"token"` field with the key as `"BearerToken"`
    and the value would be the token itself.

    - The `"request"` field specifies that this is a POST method.

    - The `"url"` field defines the endpoint URL which is
    "http://localhost:3000/api/notification/comments/create".

    - The `"headers"` field is left blank and has been disabled in this case.


    The data for the comments to be created should be included in the `"body"`
    of the request. The `"body"` field should include:


    - `"mode"`: The type of body content, which is raw in this case.

    - `"raw"`: This is where the actual details of the comments would go,
    formatted in JSON. The data should include the following:

      - `"sessionId"`: The session ID
      - `"accountId"`: The account ID
      - `"name"`: The name of the comments
      - `"description"`: The description of the comments
      - `"tags"`: The tags for the comments, separated by commas
      - `"profilePhotoUrl"`: The URL of the profile photo
      - `"coverPhotoUrl"`: The URL of the cover photo
      - `"minimumTipAmount"`: The minimum tip amount
      - `"categoryId"`: The category ID
      - `"category"`: The category name
      - `"subCategoryId"`: The subcategory ID
      - `"subCategory"`: The subcategory name
      - `"isCommentsPrivate"`: A boolean indicating if the comments is private
      - `"isTournamentOnly"`: A boolean indicating if the comments is tournament only
      - `"isCommentsDefault"`: A boolean indicating if the comments is default
      - `"isPreLiveNotificationAds"`: A boolean indicating if pre live notification ads are enabled
      - `"isPostLiveNotificationAds"`: A boolean indicating if post live notification ads are enabled
      - `"breakPreLiveNotificationUrl"`: The URL for the pre-live break notification
      - `"breakPostLiveNotificationUrl"`: The URL for the post-live break notification

    - `"options"`: Specifies that the `"raw"` body content should be in JSON
    language.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            sessionId: sessionId
            accountId: accountId
            name: My Second Comments
            description: This comments is my second comments
            tags: second,comments
            profilePhotoUrl: https://example.com/profile.jpg
            coverPhotoUrl: https://example.com/cover.jpg
            minimumTipAmount: 10
            categoryId: category123
            category: General
            subCategoryId: subCategory456
            subCategory: Specific
            isCommentsPrivate: true
            isTournamentOnly: false
            isCommentsDefault: true
            isPreLiveNotificationAds: true
            isPostLiveNotificationAds: true
            breakPreLiveNotificationUrl: https://example.com/break-pre-live.mp4
            breakPostLiveNotificationUrl: https://example.com/break-post-live.mp4
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
