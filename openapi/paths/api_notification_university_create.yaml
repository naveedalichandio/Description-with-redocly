post:
  tags:
    - NotificationUniversity
  summary: Notification - University - Create
  description: >-
    This endpoint is named "Notification - University - Create". 


    The authentication required is of type "bearer", and it uses a token which
    is expected to be of string type and assigned to the "Authorization" field
    in the request headers.


    The request method is a POST, meaning it sends data to the server to create
    a new resource.


    The URL where the request is sent to is
    "http://localhost:3000/api/notification/university/create".


    The body type is raw and the data is structured in JSON. 


    Let's walk through each field in the JSON body:


    - "sessionId": This would typically be a unique identifier for the current
    session.

    - "accountId": This field is likely used for specifying the user's account.

    - "name": It seems this field is used to set the university name.

    - "description": This field is for providing some details about the
    university.

    - "tags": These are keywords or labels that categorize and identify the
    university.

    - "profilePhotoUrl": This is the URL of the profile photo of the university.

    - "coverPhotoUrl": The URL of the cover photo of the university.

    - "minimumTipAmount": This appears to set the minimum tip amount. 

    - "categoryId" & "category": These fields are used to set the category for
    the university.

    - "subCategoryId" & "subCategory": The sub-category to which the university
    belongs to.

    - "isUniversityPrivate": A boolean indicating whether the university is
    private or not.

    - "isTournamentOnly": Indicates whether the university is only for
    tournaments.

    - "isUniversityDefault": Specifies whether the university setting is at its
    default.

    - "isPreLiveNotificationAds" & "isPostLiveNotificationAds": These fields
    appear to dictate whether there will be ads shown in notifications.

    - "breakPreLiveNotificationUrl" & "breakPostLiveNotificationUrl": These
    fields would be used to define the media files to be used during the
    pre-live and post-live break notifications.


    In the headers, a key-value pair is mentioned, but it's currently disabled
    and empty. Likely, you would fill in the appropriate header information you
    need for your request.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            sessionId: sessionId
            accountId: accountId
            name: My Second University
            description: This university is my second university
            tags: second,university
            profilePhotoUrl: https://example.com/profile.jpg
            coverPhotoUrl: https://example.com/cover.jpg
            minimumTipAmount: 10
            categoryId: category123
            category: General
            subCategoryId: subCategory456
            subCategory: Specific
            isUniversityPrivate: true
            isTournamentOnly: false
            isUniversityDefault: true
            isPreLiveNotificationAds: true
            isPostLiveNotificationAds: true
            breakPreLiveNotificationUrl: https://example.com/break-pre-live.mp4
            breakPostLiveNotificationUrl: https://example.com/break-post-live.mp4
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
