post:
  tags:
    - IncentiveLoyalty
  summary: Incentive - Loyalty - Delete
  description: >-
    This endpoint is named as "Incentive - Loyalty - Delete". It is used to
    delete a particular loyalty incentive in your application.


    1. Authentication: This endpoint uses 'Bearer' authentication. The bearer
    token (also known as a security token) must be provided to authenticate the
    session. 
        - Key: "token"
        - Value: "sessionId"
        - Type: This is a 'string' data type.

    2. Method: This endpoint uses the 'POST' method which is usually used to
    send data to the server.


    3. URL: "http://localhost:3000/api/incentive/loyalty/delete"; This is the
    endpoint URL, which contains the server's address and the specific route to
    the 'Incentive - Loyalty - Delete' API.


    4. Headers: The headers data is currently empty, but this location usually
    contains additional information that client must pass to the server.


    5. Body: This is where you specify the data that is to be sent to the
    server. 

        It uses 'raw' mode for the body, which allows you to send data without any encoding. The raw data string sent to this endpoint should be in JSON format and contains the following fields:
        
        - "sessionId": The session ID for logged-in user session. This should be a string.
        - "accountId": The account ID related to the user who wishes to delete a loyalty incentive. This should be a string.
        - "loyaltyId": The ID of the specific loyalty incentive that is to be deleted. This should be a string.

    Note: Make sure you replace "sessionId", "accountId", and "loyaltyId" with
    actual values when making a request.
  requestBody:
    content:
      '*/*':
        schema:
          type: string
          example: >-
            "{\"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"loyaltyId\":\"loyaltyId\"}"
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
