post:
  tags:
    - ArticleTopic
  summary: Article - Topic - Create Bulk Auto
  description: >-
    This endpoint, named "Article - Topic - Create Bulk Auto", is a POST method
    used for creating multiple topics under an article in a single request. It
    requires bearer token authorization and is located at
    "http://localhost:3000/api/article/topic/createBulk".


    The authorization field includes "auth" which is of type "bearer". This
    includes the "key" which should be called "token", and its "value" should be
    your Bearer access token. This token should be of "string" type.


    The "request" element includes the HTTP method type which is "POST" in this
    case as well as the "url" for the API endpoint. Headers for the request are
    included in the "headers" object but they are currently blank and disabled.


    The "body" of the request contains the data that will be sent to the server.
    The "mode" is set to "raw", so raw input data can be provided. The
    "language" key in "options" is set to "json", meaning the body data should
    be in JSON format. 


    The "raw" string contains a JSON object, which includes:

    - "sessionId": This is a special identifier for the session, replace it with
    your session ID.

    - "accountId": This denotes the account id for the user, replace it with the
    user's account ID.

    - "topics": This is an array of objects where each object represents a
    unique article topic that is to be created. Each topic object includes the
    following:
      - "sessionId" & "accountId": Similar to above.
      - "category": This represents the category of the article topic.
      - "subCategory": This represents the sub-category within the main category.
      - "name": This is the name of the topic.
      - "displayName": This is the displayed name of the topic.
      - "description": This is a brief summary of the topic.
      - "tags": Comma-separated keywords related to the topic for search optimization. 

    Note: Replace the placeholders "sessionId" and "accountId" with real values
    for all instances inside the topics array.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            sessionId: sessionId
            accountId: accountId
            topics:
              - sessionId: sessionId
                accountId: accountId
                category: My Brand New Category
                subCategory: My Brand New Sub Category
                name: Miami Art Week 8
                displayName: Miami Art Week 2028
                description: >-
                  An immersive celebration of art and culture during Miami Art
                  Week.
                tags: Art,Exhibition,Miami,Culture
              - sessionId: sessionId
                accountId: accountId
                category: Technology Innovations
                subCategory: AI and Machine Learning
                name: Tech Trends 2028
                displayName: Technology Trends 2028
                description: An exploration of cutting-edge technology trends.
                tags: Tech,AI,Innovation
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
