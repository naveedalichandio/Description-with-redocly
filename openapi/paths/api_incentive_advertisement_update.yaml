put:
  tags:
    - IncentiveAdvertisement
  summary: Incentive - Advertisement - Update
  description: >-
    The endpoint provides an avenue to update an existing advertisement
    incentive. It uses a PUT request to execute this operation. Below are the
    details of the endpoint and its various elements:


    1. **Name**: Identifies the endpoint, in this case, "Incentive -
    Advertisement - Update".


    2. **Request**: Contains various components for the PUT request:

        a. **Auth**: The authorization required to access this endpoint, which is of type "bearer". It includes a token which has to be provided for access.

        b. **Method**: Specifies the HTTP method used, which is PUT for updates in RESTful APIs.

        c. **URL**: The endpoint's URL where the request is sent- "http://localhost:3000/api/incentive/advertisement/update"

        d. **Headers**: Headers that have to be included in the request. Here, 'Client-UUID' is a compulsory header.

        e. **Body**: Contains the detailed data for the update request. It is sent in "raw" mode and should follow the JSON language. 
        
           i. The elements of an advertisement to be updated are: `accountId`, `sessionId`, `advertisementId`, `title`, `description`, `tags`, `coverPhotoUrl`, `websiteUrl`, `tokenAmount`, `scheduleDate`, `scheduleTime`, `pageType`, `city`, `region`, `country`, `keywords`, `category`, `voteButtonQuantity`, `voteButtonText1`, `voteButtonText2`, `crossPlatformBudget`, `adShareSettings`, `isPaused`. More details can be found in the request body.

    3. **Response**: It is not shown in the provided data, but it usually
    contains the data returned by the server in response to the request.


    Please note that all the keys in the body are mandatory for the endpoint to
    work correctly. Also, some values may require specific formatting(e.g.
    `scheduleTime` needs the format 'hh:mm:ss' and `scheduleDate` needs the
    format 'YYYY-MM-DD'). Make sure to replace the placeholder values with real
    ones when making actual requests.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          example:
            accountId: accountId
            sessionId: sessionId
            advertisementId: advertisementId
            title: Converse Shoes Campaign
            description: Promote the latest Converse shoes 2.0
            tags: shoes,fashion,trending
            coverPhotoUrl: https://example.com/images/converse-shoes.jpg
            websiteUrl: https://example.com/converse
            tokenAmount: 10
            scheduleDate: '2024-11-25'
            scheduleTime: '10:00:00'
            pageType: Livestream
            city: Henderson
            region: Nevada
            country: United States
            keywords:
              - category: Fashion
                themes:
                  - Trending
                  - Shoes
            category: Electronics & Gadgets
            voteButtonQuantity: 2
            voteButtonText1: Buy Now
            voteButtonText2: Learn More
            crossPlatformBudget:
              - platform: google
                perDay: 100
                numberOfDays: 7
              - platform: meta
                perDay: 50
                numberOfDays: 14
            adShareSettings: 2 Way Split
            isPaused: false
  security:
    - bearerAuth: []
  parameters:
    - name: Client-UUID
      in: header
      schema:
        type: string
      example: ClientUUID
  responses:
    '200':
      description: Successful response
      content:
        application/json: {}
